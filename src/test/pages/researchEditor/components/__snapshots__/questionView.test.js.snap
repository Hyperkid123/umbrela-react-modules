// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Question View component should render correctly empty 1`] = `
<Grid
  alignContent="stretch"
  alignItems="stretch"
  classes={
    Object {
      "align-content-xs-center": "jss13",
      "align-content-xs-flex-end": "jss15",
      "align-content-xs-flex-start": "jss14",
      "align-content-xs-space-around": "jss17",
      "align-content-xs-space-between": "jss16",
      "align-items-xs-baseline": "jss12",
      "align-items-xs-center": "jss9",
      "align-items-xs-flex-end": "jss11",
      "align-items-xs-flex-start": "jss10",
      "direction-xs-column": "jss4",
      "direction-xs-column-reverse": "jss5",
      "direction-xs-row-reverse": "jss6",
      "grid-lg": "jss65",
      "grid-lg-1": "jss66",
      "grid-lg-10": "jss75",
      "grid-lg-11": "jss76",
      "grid-lg-12": "jss77",
      "grid-lg-2": "jss67",
      "grid-lg-3": "jss68",
      "grid-lg-4": "jss69",
      "grid-lg-5": "jss70",
      "grid-lg-6": "jss71",
      "grid-lg-7": "jss72",
      "grid-lg-8": "jss73",
      "grid-lg-9": "jss74",
      "grid-md": "jss52",
      "grid-md-1": "jss53",
      "grid-md-10": "jss62",
      "grid-md-11": "jss63",
      "grid-md-12": "jss64",
      "grid-md-2": "jss54",
      "grid-md-3": "jss55",
      "grid-md-4": "jss56",
      "grid-md-5": "jss57",
      "grid-md-6": "jss58",
      "grid-md-7": "jss59",
      "grid-md-8": "jss60",
      "grid-md-9": "jss61",
      "grid-sm": "jss39",
      "grid-sm-1": "jss40",
      "grid-sm-10": "jss49",
      "grid-sm-11": "jss50",
      "grid-sm-12": "jss51",
      "grid-sm-2": "jss41",
      "grid-sm-3": "jss42",
      "grid-sm-4": "jss43",
      "grid-sm-5": "jss44",
      "grid-sm-6": "jss45",
      "grid-sm-7": "jss46",
      "grid-sm-8": "jss47",
      "grid-sm-9": "jss48",
      "grid-xl": "jss78",
      "grid-xl-1": "jss79",
      "grid-xl-10": "jss88",
      "grid-xl-11": "jss89",
      "grid-xl-12": "jss90",
      "grid-xl-2": "jss80",
      "grid-xl-3": "jss81",
      "grid-xl-4": "jss82",
      "grid-xl-5": "jss83",
      "grid-xl-6": "jss84",
      "grid-xl-7": "jss85",
      "grid-xl-8": "jss86",
      "grid-xl-9": "jss87",
      "grid-xs": "jss26",
      "grid-xs-1": "jss27",
      "grid-xs-10": "jss36",
      "grid-xs-11": "jss37",
      "grid-xs-12": "jss38",
      "grid-xs-2": "jss28",
      "grid-xs-3": "jss29",
      "grid-xs-4": "jss30",
      "grid-xs-5": "jss31",
      "grid-xs-6": "jss32",
      "grid-xs-7": "jss33",
      "grid-xs-8": "jss34",
      "grid-xs-9": "jss35",
      "justify-xs-center": "jss18",
      "justify-xs-flex-end": "jss19",
      "justify-xs-space-around": "jss21",
      "justify-xs-space-between": "jss20",
      "spacing-xs-16": "jss23",
      "spacing-xs-24": "jss24",
      "spacing-xs-40": "jss25",
      "spacing-xs-8": "jss22",
      "typeContainer": "jss1",
      "typeItem": "jss2",
      "wrap-xs-nowrap": "jss7",
      "wrap-xs-wrap-reverse": "jss8",
      "zeroMinWidth": "jss3",
    }
  }
  component="div"
  container={false}
  direction="row"
  item={true}
  justify="flex-start"
  spacing={16}
  wrap="wrap"
  xs={12}
  zeroMinWidth={false}
>
  <styled.div>
    <styled.div>
      <WithStyles
        fullWidth={true}
      >
        <WithStyles
          fullWidth={true}
          inputRef={[Function]}
          name="questionTitleInput"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyPress={[Function]}
          startAdornment={
            <WithStyles
              position="start"
            >
              <ShouldUpdate />
            </WithStyles>
          }
          value="foo"
        />
      </WithStyles>
    </styled.div>
    <TextFieldComent
      alignRight={true}
      error={false}
      label="3 undefined 255 undefined"
    />
    <styled.div>
      <WithStyles
        container={true}
        direction="row"
        justify="flex-end"
        spacing={0}
      >
        <WithStyles
          item={true}
        >
          <WithStyles
            onClick={[Function]}
            raised={true}
          >
            <ShouldUpdate />
          </WithStyles>
        </WithStyles>
      </WithStyles>
    </styled.div>
    <styled.div>
      <Connect(QuestionBody) />
    </styled.div>
  </styled.div>
  <WithStyles
    onClose={[Function]}
    open={false}
  >
    <WithStyles
      container={true}
      justify="center"
      spacing={16}
      style={
        Object {
          "padding": 16,
        }
      }
    >
      <WithStyles
        item={true}
        xs={12}
      >
         
        <styled.span>
          foo
        </styled.span>
        ?
      </WithStyles>
      <br />
      <WithStyles
        item={true}
      >
        <WithStyles
          color="secondary"
          onClick={[Function]}
          raised={true}
        />
      </WithStyles>
      <WithStyles
        item={true}
      >
        <WithStyles
          color="primary"
          onClick={[Function]}
          raised={true}
        />
      </WithStyles>
    </WithStyles>
  </WithStyles>
</Grid>
`;

exports[`Question View component should render modal 1`] = `
<WithStyles
  item={true}
  xs={12}
>
  <styled.div>
    <styled.div>
      <WithStyles
        fullWidth={true}
      >
        <WithStyles
          fullWidth={true}
          inputRef={[Function]}
          name="questionTitleInput"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyPress={[Function]}
          startAdornment={
            <WithStyles
              position="start"
            >
              <ShouldUpdate />
            </WithStyles>
          }
          value="foo"
        />
      </WithStyles>
    </styled.div>
    <TextFieldComent
      alignRight={true}
      error={false}
      label="3 undefined 255 undefined"
    />
    <styled.div>
      <WithStyles
        container={true}
        direction="row"
        justify="flex-end"
        spacing={0}
      >
        <WithStyles
          item={true}
        >
          <WithStyles
            onClick={[Function]}
            raised={true}
          >
            <ShouldUpdate />
          </WithStyles>
        </WithStyles>
      </WithStyles>
    </styled.div>
    <styled.div>
      <Connect(QuestionBody) />
    </styled.div>
  </styled.div>
  <WithStyles
    onClose={[Function]}
    open={true}
  >
    <WithStyles
      container={true}
      justify="center"
      spacing={16}
      style={
        Object {
          "padding": 16,
        }
      }
    >
      <WithStyles
        item={true}
        xs={12}
      >
         
        <styled.span>
          foo
        </styled.span>
        ?
      </WithStyles>
      <br />
      <WithStyles
        item={true}
      >
        <WithStyles
          color="secondary"
          onClick={[Function]}
          raised={true}
        />
      </WithStyles>
      <WithStyles
        item={true}
      >
        <WithStyles
          color="primary"
          onClick={[Function]}
          raised={true}
        />
      </WithStyles>
    </WithStyles>
  </WithStyles>
</WithStyles>
`;
